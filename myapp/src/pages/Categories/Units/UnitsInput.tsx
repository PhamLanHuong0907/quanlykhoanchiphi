import React, { useState } from "react";
import LayoutInput from "../../../layout/layout_input";
import PATHS from "../../../hooks/path";
import { useApi } from "../../../hooks/useFetchData";

interface UnitsInputProps {
  onClose?: () => void;
  onSuccess?: () => void;
}

const UnitsInput: React.FC<UnitsInputProps> = ({ onClose, onSuccess }) => {
  // ====== Base API ======
  const basePath = `/api/catalog/unitofmeasure`;
  const { postData, loading: saving, error: saveError } = useApi(basePath);

  // ====== State ======
  const [formData, setFormData] = useState({
    name: "",
  });

  // ====== Submit form ======
  const handleSubmit = async (data: Record<string, string>) => {
    const name = data["ƒê∆°n v·ªã t√≠nh"]?.trim();
    if (!name) return alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë∆°n v·ªã t√≠nh!");

    console.log("üì§ POST:", { name });

    await postData({ name }, () => {
      console.log("‚úÖ T·∫°o ƒë∆°n v·ªã t√≠nh th√†nh c√¥ng!");
      onSuccess?.(); // refresh b·∫£ng ngo√†i
      onClose?.();   // ƒë√≥ng form
    });
  };

  // ====== Fields ======
  const fields = [
    {
      label: "ƒê∆°n v·ªã t√≠nh",
      type: "text" as const,
      placeholder: "Nh·∫≠p t√™n ƒë∆°n v·ªã t√≠nh, v√≠ d·ª• cm",
    },
  ];

  return (
    <LayoutInput
      title01="Danh m·ª•c / ƒê∆°n v·ªã t√≠nh"
      title="T·∫°o m·ªõi ƒê∆°n v·ªã t√≠nh"
      fields={fields}
      onSubmit={handleSubmit}
      closePath={PATHS.UNIT.LIST}
      onClose={onClose}
      initialData={{
        "ƒê∆°n v·ªã t√≠nh": formData.name,
      }}
    >
      {/* Tr·∫°ng th√°i x·ª≠ l√Ω */}
      {saving && <p className="text-blue-500 mt-3">ƒêang l∆∞u...</p>}
      {saveError && <p className="text-red-500 mt-3">L·ªói: {saveError}</p>}
    </LayoutInput>
  );
};

export default UnitsInput;
